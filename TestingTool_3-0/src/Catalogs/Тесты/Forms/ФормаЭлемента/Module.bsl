&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	DataDrivenTestПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура DataDrivenTestПриИзменении(Элемент)
	Если Объект.DataDrivenTest=Истина Тогда
		Элементы.ГруппаДанные.Видимость=Истина;
	Иначе
		Элементы.ГруппаДанные.Видимость=Ложь;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// если в гит, тогда добавим путь
	ПолучитьПредставлениеПутьКФайлу();	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПолучитьПредставлениеПутьКФайлу();
КонецПроцедуры

&НаСервере
Процедура ПолучитьПредставлениеПутьКФайлу()
	
	Если Объект.ОсновнойВариантХраненияСценария=ПредопределенноеЗначение("Перечисление.ВариантыХраненияСценариев.ВоВнешнемФайлеGIT") Тогда
		СоответствиеНастроекПользователя = СценарноеТестированиеВызовСервера.ПолучитьСоответствиеНастроекПользователя(ПользователиКлиентСервер.ТекущийПользователь(),ПользователиКлиентСервер.ТекущееРабочееМесто());
		ИмяКлюча = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Справочники.КлючиНастроек.ПутьККаталогуGIT,"ИмяКлюча");
		ПутьКаталогGIT = СоответствиеНастроекПользователя.Получить(ИмяКлюча);
		Если ПутьКаталогGIT=Неопределено ИЛИ НЕ ЗначениеЗаполнено(ПутьКаталогGIT) Тогда
			ВызватьИсключение "Не указана настройка для текущего пользователя 'ПутьКаталогGIT' или она не заполнена";
		КонецЕсли;		
		ПредставлениеПутьКФайлу = ПутьКаталогGIT+"\"+Объект.ПутьКФайлу;
		ПредставлениеПутьКДанным = ПутьКаталогGIT+"\"+Объект.ПутьКФайлуДанных;
	Иначе
		ПредставлениеПутьКФайлу = Объект.ПутьКФайлу;
		ПредставлениеПутьКДанным = Объект.ПутьКФайлуДанных;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СформироватьПутьКФайлуПоПредставлению(Отказ, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//Вставить содержимое обработчика
КонецПроцедуры

&НаСервере
Процедура СформироватьПутьКФайлуПоПредставлению(Отказ, ТекущийОбъект)
	
	Если Объект.ОсновнойВариантХраненияСценария=ПредопределенноеЗначение("Перечисление.ВариантыХраненияСценариев.ВоВнешнемФайлеGIT") Тогда
		СоответствиеНастроекПользователя = СценарноеТестированиеВызовСервера.ПолучитьСоответствиеНастроекПользователя(ПользователиКлиентСервер.ТекущийПользователь(),ПользователиКлиентСервер.ТекущееРабочееМесто());
		ИмяКлюча = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Справочники.КлючиНастроек.ПутьККаталогуGIT,"ИмяКлюча");
		ПутьКаталогGIT = СоответствиеНастроекПользователя.Получить(ИмяКлюча);
		Если ПутьКаталогGIT=Неопределено ИЛИ НЕ ЗначениеЗаполнено(ПутьКаталогGIT) Тогда
			ВызватьИсключение "Не указана настройка для текущего пользователя 'ПутьКаталогGIT' или она не заполнена";
		КонецЕсли;		
		
		// проверим, а указан ли у нас гит каталог?
		Если Не Найти(Врег(ПредставлениеПутьКФайлу),Врег(ПутьКаталогGIT)) Тогда
			Сообщить("Указанный путь к файлу не хранится в каталоге GIT/Общем каталоге '"+ПредставлениеПутьКФайлу+"'! Выберите другой вариант хранения, укажите другой путь.");
			Сообщить("Путь к каталогу гит для текущего пользователя на текущем компьютере - '"+ПутьКаталогGIT+"'");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если Не Найти(Врег(ПредставлениеПутьКДанным),Врег(ПутьКаталогGIT)) И ЗначениеЗаполнено(ПредставлениеПутьКДанным) Тогда
			Сообщить("Указанный путь к файлу не хранится в каталоге GIT/Общем каталоге '"+ПредставлениеПутьКДанным+"'! Выберите другой вариант хранения, укажите другой путь.");
			Сообщить("Путь к каталогу гит для текущего пользователя на текущем компьютере - '"+ПутьКаталогGIT+"'");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		ПутьКФайлу = СтрЗаменить(Врег(ПредставлениеПутьКФайлу),Врег(ПутьКаталогGIT),"");
		ТекущийОбъект.ПутьКФайлу = Прав(ПредставлениеПутьКФайлу,СтрДлина(ПутьКФайлу)-1);
		
		ПутьКДанным = СтрЗаменить(Врег(ПредставлениеПутьКДанным),Врег(ПутьКаталогGIT),"");
		ТекущийОбъект.ПутьКФайлуДанных = Прав(ПредставлениеПутьКДанным,СтрДлина(ПутьКДанным)-1);
		
	Иначе
		ТекущийОбъект.ПутьКФайлу = ПредставлениеПутьКФайлу;
		ТекущийОбъект.ПутьКФайлуДанных = ПредставлениеПутьКДанным;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие); 
	Диалог.Заголовок = "Выберите файл"; 
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "Любой-файл (*.*)|*.*"; 
	Если Объект.ТипТеста=ПредопределенноеЗначение("Перечисление.ТипыТестов.ЮнитТест") Тогда
		Фильтр = "EPF-файл (*.epf)|*.epf|ERF-файл (*.erf)|*.erf|XML-файл (*.xml)|*.xml|Любой-файл (*.*)|*.*"; 
	ИначеЕсли Объект.ТипТеста=ПредопределенноеЗначение("Перечисление.ТипыТестов.СценарныйТест") Тогда
		Фильтр = "XML-файл (*.xml)|*.xml|EPF-файл (*.epf)|*.epf|ERF-файл (*.erf)|*.erf|Любой-файл (*.*)|*.*"; 
	КонецЕсли;
	Диалог.Фильтр = Фильтр; 
	Если ЗначениеЗаполнено(ПредставлениеПутьКФайлу) Тогда
		Диалог.Каталог = ПолучитьКаталогПоПутиФайла(ПредставлениеПутьКФайлу);
	КонецЕсли;
	Диалог.МножественныйВыбор = Ложь; 
	ВыборФайлаОткрытияСтруктурыКонфигурации = новый ОписаниеОповещения("ВыборФайлаОткрытияФайлаСценария",ЭтотОбъект);
	Диалог.Показать(ВыборФайлаОткрытияСтруктурыКонфигурации);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаОткрытияФайлаСценария(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		ПредставлениеПутьКФайлу = ВыбранныеФайлы[0]; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПутьКДаннымНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие); 
	Диалог.Заголовок = "Выберите файл"; 
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "MXL-файл (*.mxl)|*.mxl|Excel-файл (*.xlsx)|*.xlsx|Любой-файл (*.*)|*.*"; 
	Диалог.Фильтр = Фильтр; 
	Если ЗначениеЗаполнено(ПредставлениеПутьКДанным) Тогда
		Диалог.Каталог = ПолучитьКаталогПоПутиФайла(ПредставлениеПутьКДанным);
	КонецЕсли;
	Диалог.МножественныйВыбор = Ложь; 
	ВыборФайлаОткрытияФайлаОткрытияДанных = новый ОписаниеОповещения("ВыборФайлаОткрытияФайлаОткрытияДанных",ЭтотОбъект);
	Диалог.Показать(ВыборФайлаОткрытияФайлаОткрытияДанных);
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаОткрытияФайлаОткрытияДанных(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		ПредставлениеПутьКДанным = ВыбранныеФайлы[0]; 
	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Функция  ПолучитьКаталогПоПутиФайла(Знач ПутьКФайлу)
	Файл = новый Файл(ПутьКФайлу);
	Возврат Файл.Путь;	
КонецФункции


&НаКлиенте
Процедура ВыгрузитьВФайл(Команда)
	Сообщить("В текущей версии не поддерживается. Ожидается!");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	Сообщить("В текущей версии не поддерживается. Ожидается!");
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(Объект.ID) Тогда
		Объект.ID = СценарноеТестированиеКлиентСервер.СформироватьАвтоматическиИдентификаторТеста(Объект.Наименование);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОктрытьВБраузере(Команда)
	мОписаниеОповещения = новый ОписаниеОповещения("мРезультатЗапуска",ЭтаФорма);
	НачатьЗапускПриложения(мОписаниеОповещения,Объект.НомерЗадачи);
КонецПроцедуры

&НаКлиенте
Процедура мРезультатЗапуска(КодВозврата,ДополнительныеПараметры) Экспорт
КонецПроцедуры
