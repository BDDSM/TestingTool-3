
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(ОтборПоПроверкам) Тогда
		ОтборПоПроверкам = "Все";
	КонецЕсли;
	ОбработатьОтборФильтра(ОтборПоПроверкам);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьСейчасСервер(Задание)
	ОписаниеОшибки = "";
	Если ПланировщикЗаданийСервер.ДобавитьЗаданиеВПуллНемедленно(Задание,ОписаниеОшибки)=Истина Тогда
		Сообщить("Успешно!");
	Иначе
		Сообщить("Ошибка!"+Символы.ПС+ОписаниеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчас(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	ВыполнитьСейчасСервер(ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоШаблону(Команда)
	
	мПараметры = новый Структура();
	Форма = ПолучитьФорму("Справочник.Задания.Форма.ФормаВыбораВариантаСозданияПоШаблону",мПараметры,ЭтаФорма);
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.РедактироватьКонструктором = Истина Тогда
		
		Шаблон = НайтиШаблонРедактирования(ТекущиеДанные.ИдентификаторКонструктора);
		
		Если ЗначениеЗаполнено(Шаблон) Тогда
			СтандартнаяОбработка = Ложь;
			ОткрытьОбработкуРедактирования(Шаблон,ТекущиеДанные.Ссылка);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.РедактироватьКонструктором = Истина Тогда
		
		Шаблон = НайтиШаблонРедактирования(ТекущиеДанные.ИдентификаторКонструктора);
		
		Если ЗначениеЗаполнено(Шаблон) Тогда
			Отказ = Истина;
			ОткрытьОбработкуРедактирования(Шаблон,ТекущиеДанные.Ссылка);
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция НайтиШаблонРедактирования(Знач ИдентификаторКонструктора)
	
	Шаблон = Неопределено;
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НастройкаСозданияЗаданий.ДополнительнаяОбработка как Ссылка
	|ИЗ
	|	РегистрСведений.НастройкаСозданияЗаданий КАК НастройкаСозданияЗаданий
	|ГДЕ
	|	НастройкаСозданияЗаданий.ДополнительнаяОбработка.ИмяОбъекта = &ИмяОбъекта
	|	И НЕ НастройкаСозданияЗаданий.ДополнительнаяОбработка.ПометкаУдаления
	|	И НастройкаСозданияЗаданий.ДополнительнаяОбработка.Публикация = ЗНАЧЕНИЕ(Перечисление.ВариантыПубликацииДополнительныхОтчетовИОбработок.Используется)";
	Запрос.УстановитьПараметр("ИмяОбъекта",ИдентификаторКонструктора);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Шаблон;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать(); 	
	Выборка.Следующий();
	
	Шаблон = Выборка.Ссылка;
	
	Возврат Шаблон;
	                    
КонецФункции

&НаКлиенте
Процедура ОткрытьОбработкуРедактирования(Знач Шаблон,Знач Задание)
	
	ДанныеОбработки = новый Структура("Ссылка",Шаблон);
	
	ВыполняемаяКоманда = Новый Структура(
		"Ссылка, Представление, 
		|Идентификатор, ВариантЗапуска, ПоказыватьОповещение, 
		|Модификатор, ОбъектыНазначения, ЭтоОтчет, Вид");
	ЗаполнитьЗначенияСвойств(ВыполняемаяКоманда, ДанныеОбработки);
	Массив = новый Массив;
	Массив.Добавить(Задание);
	ВыполняемаяКоманда.ОбъектыНазначения = Массив;
	//ВыполняемаяКоманда.ОбъектыНазначения = ОбъектыНазначения.ВыгрузитьЗначения();
	ВыполняемаяКоманда.ЭтоОтчет = Ложь;
	ВыполняемаяКоманда.Вид = ПредопределенноеЗначение("Перечисление.ВидыДополнительныхОтчетовИОбработок.ДополнительнаяОбработка");
	
	ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьОткрытиеФормыОбработки(ВыполняемаяКоманда, ВладелецФормы, ВыполняемаяКоманда.ОбъектыНазначения);

КонецПроцедуры

&НаКлиенте
Процедура ОтборПоПроверкамПриИзменении(Элемент)
	ОбработатьОтборФильтра(ОтборПоПроверкам);	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтборФильтра(Знач ТипОтбора)
	
	ЭлементОтбора = Неопределено;  	
	
	Для каждого стр из Список.Отбор.Элементы Цикл
		Если стр.ИдентификаторПользовательскойНастройки="ОтборПоПроверкам" Тогда
			ЭлементОтбора = стр;
			прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЭлементОтбора=Неопределено Тогда 
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));  	
		ЭлементОтбора.ИдентификаторПользовательскойНастройки = "ОтборПоПроверкам";
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭтоПроверка");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
	Если ТипОтбора="Проверки" Тогда
		ЭлементОтбора.ПравоеЗначение = Истина;
		ЭлементОтбора.Использование = Истина;
	ИначеЕсли ТипОтбора="Задания" Тогда
		ЭлементОтбора.ПравоеЗначение = Ложь;
		ЭлементОтбора.Использование = Истина;
	Иначе
		ЭлементОтбора.Использование = Ложь;
	КонецЕсли;
	
	
	
КонецПроцедуры	