
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	НастройкаРабочегоМестаНачальнойСтранцы.Пользователь,
	|	НастройкаРабочегоМестаНачальнойСтранцы.ДополнительнаяОбработкаДляРабочегоМеста
	|ИЗ
	|	РегистрСведений.НастройкаРабочегоМестаНачальнойСтранцы КАК НастройкаРабочегоМестаНачальнойСтранцы
	|ГДЕ
	|	НастройкаРабочегоМестаНачальнойСтранцы.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь",Пользователи.ТекущийПользователь());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДополнительнаяОбработкаДляРабочегоМеста = Выборка.ДополнительнаяОбработкаДляРабочегоМеста;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Если ЗначениеЗаполнено(ДополнительнаяОбработкаДляРабочегоМеста) Тогда
	//	
	//	мПараметры = новый Структура;
	//	ИмяОбработки = ПодключитьВнешнююОбработкуМенеджерСценарногоТестирования();
	//	ОткрытьФорму("ВнешняяОбработка."+ИмяОбработки+".Форма",мПараметры,ЭтаФорма,ЭтаФорма.УникальныйИдентификатор,ЭтаФорма.Окно);
	//	
	//КонецЕсли;	
	ПодключитьОбработчикОжидания("мОктыртьФорму",0.01,Истина);
	
	
КонецПроцедуры

&НаСервере
Функция ПодключитьВнешнююОбработкуМенеджерСценарногоТестирования()
	
	
	СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДополнительнаяОбработкаДляРабочегоМеста,"ХранилищеОбработки,БезопасныйРежим,ПредупреждатьОбОпасныхДействиях");
	ХранилищеОбработки = СтруктураРеквизитов.ХранилищеОбработки;
	ДвоичныеДанные = ХранилищеОбработки.Получить();
	АдресХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	

	ОписаниеЗащитыОтОпасныхДействий = новый ОписаниеЗащитыОтОпасныхДействий();
	ОписаниеЗащитыОтОпасныхДействий.ПредупреждатьОбОпасныхДействиях = СтруктураРеквизитов.ПредупреждатьОбОпасныхДействиях;
	
	БезопасныйРежим = СтруктураРеквизитов.БезопасныйРежим;
	
	Попытка
    	Возврат ВнешниеОбработки.Подключить(АдресХранилища,,БезопасныйРежим,ОписаниеЗащитыОтОпасныхДействий);
	Исключение
		Возврат ВнешниеОбработки.Подключить(АдресХранилища,,БезопасныйРежим);
	КонецПопытки;

КонецФункции

&НаКлиенте
Процедура ОктыртьФорму(Команда) Экспорт
	
	//мОкно = Неопределено;
	//
	//Для каждого стр из ПолучитьОкна() Цикл
	//	Если стр.НачальнаяСтраница=Истина Тогда
	//		мОкно = стр;
	//	КонецЕсли;
	//КонецЦикла;
	//
	//Если ЗначениеЗаполнено(ДополнительнаяОбработкаДляРабочегоМеста) Тогда
	//	
	//	мПараметры = новый Структура;
	//	ИмяОбработки = ПодключитьВнешнююОбработкуМенеджерСценарногоТестирования();
	//	ОткрытьФорму("ВнешняяОбработка."+ИмяОбработки+".Форма",мПараметры,ЭтаФорма,мОкно,ЭтаФорма.Окно);
	//	//ОткрытьФорму("Обработка.ВыполнениеТестов.Форма.Форма",мПараметры,ЭтаФорма,мОкно,ЭтаФорма.Окно);
	//	
	//КонецЕсли;	
	
	Если ЗначениеЗаполнено(ДополнительнаяОбработкаДляРабочегоМеста) Тогда
		
		мПараметры = новый Структура;
		ИмяОбработки = ПодключитьВнешнююОбработкуМенеджерСценарногоТестирования();
		ОткрытьФорму("ВнешняяОбработка."+ИмяОбработки+".Форма",мПараметры,ЭтаФорма,ЭтаФорма.УникальныйИдентификатор,ЭтаФорма.Окно);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура мОктыртьФорму() Экспорт
	
	//мОкно = Неопределено;
	//
	//Для каждого стр из ПолучитьОкна() Цикл
	//	Если стр.НачальнаяСтраница=Истина Тогда
	//		мОкно = стр;
	//	КонецЕсли;
	//КонецЦикла;
	//
	//Если ЗначениеЗаполнено(ДополнительнаяОбработкаДляРабочегоМеста) Тогда
	//	
	//	мПараметры = новый Структура;
	//	ИмяОбработки = ПодключитьВнешнююОбработкуМенеджерСценарногоТестирования();
	//	ОткрытьФорму("ВнешняяОбработка."+ИмяОбработки+".Форма",мПараметры,ЭтаФорма,мОкно,ЭтаФорма.Окно);
	//	//ОткрытьФорму("Обработка.ВыполнениеТестов.Форма.Форма",мПараметры,ЭтаФорма,мОкно,ЭтаФорма.Окно);
	//	
	//КонецЕсли;	
	
	Если ЗначениеЗаполнено(ДополнительнаяОбработкаДляРабочегоМеста) Тогда
		
		мПараметры = новый Структура;
		ИмяОбработки = ПодключитьВнешнююОбработкуМенеджерСценарногоТестирования();
		ОткрытьФорму("ВнешняяОбработка."+ИмяОбработки+".Форма",мПараметры,ЭтаФорма,ЭтаФорма.УникальныйИдентификатор,ЭтаФорма.Окно);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	мОктыртьФорму();
КонецПроцедуры
