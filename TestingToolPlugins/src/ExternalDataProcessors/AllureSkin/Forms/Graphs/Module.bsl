
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мОбъект = РеквизитФормыВЗначение("Объект");
	мОбъект.ДобавитьМеню(ЭтаФорма,"Graphs");
	
	ЭтаФорма.КоманднаяПанель.Видимость = Ложь;
	ЭтаФорма.АвтоЗаголовок = Ложь;
	ЭтаФорма.Заголовок = "Graphs";
	
	ЗаполнитьЗначенияСвойств(Объект,Параметры);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗагрузитьНастройкиПользователя();
	СформироватьДиаграммы();
КонецПроцедуры

&НаКлиенте
Процедура КнопкаМеню(Команда)
	ИмяКоманды = Команда.Имя;
	мПараметры = новый Структура("Проверка,ТестируемыйКлиент",Объект.Проверка,Объект.ТестируемыйКлиент);
	ОткрытьФорму("ВнешняяОбработка.AllureSkin.Форма."+ИмяКоманды,мПараметры,ЭтаФорма,ЭтаФорма.УникальныйИдентификатор,ЭтаФорма.Окно);
КонецПроцедуры

&НаСервере
Процедура СформироватьДиаграммы()
	
	Объект.Проверка = ПолучитьПоследнююПроверкуДляТестируемогоКлиента(Объект.ТестируемыйКлиент);
	
	СформироватьДиаграммуСтатусы();
	СформироватьДиаграммуПродолжительность();
	СформироватьДиаграммуСерьезностьДефектов();
	СформироватьДиаграммуСоотношениеТестов();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДиаграммуСтатусы()
	
	Перем Выборка, Запрос, КоличествоОшибок, КоличествоПровалов, КоличествоПропущенных, КоличествоТестовыхСлучаев, КоличествоУспешных, СерияОшибки, СерияПадения, СерияПропуски, СерияУспешно, ТочкаДиаграммы;
	
	Диаграмма_Статус.Очистить();
	
	// настройки графика
	Если НЕ ЗначениеЗаполнено(ВидГрафика_Статус) Тогда
		ВидГрафика_Статус="Круговая";
	КонецЕсли;
	Элементы.ВидГрафика_Статус.РежимВыбораИзСписка = Истина;
	Элементы.ВидГрафика_Статус.РедактированиеТекста = Ложь;
	Элементы.ВидГрафика_Статус.СписокВыбора.Очистить();
	Элементы.ВидГрафика_Статус.СписокВыбора.Добавить("Гистограмма");
	Элементы.ВидГрафика_Статус.СписокВыбора.Добавить("Круговая");
	Элементы.ВидГрафика_Статус.СписокВыбора.Добавить("ГистограммаГоризонтальная");
	Элементы.ВидГрафика_Статус.СписокВыбора.Добавить("Изометрическая");
	Элементы.ВидГрафика_Статус.СписокВыбора.Добавить("ГистограммаОбъемная");
	Элементы.ВидГрафика_Статус.СписокВыбора.Добавить("КруговаяОбъемная");
	
	Диаграмма_Статус.ТипДиаграммы=ТипДиаграммы[ВидГрафика_Статус];
	СерияПадения = Диаграмма_Статус.УстановитьСерию("Падения");
	СерияОшибки = Диаграмма_Статус.УстановитьСерию("Ошибки");
	СерияПропуски = Диаграмма_Статус.УстановитьСерию("Пропуски");
	СерияУспешно = Диаграмма_Статус.УстановитьСерию("Успешно");
	
	КоличествоПровалов = 0;
	КоличествоОшибок = 0;
	КоличествоПропущенных = 0;
	КоличествоУспешных = 0;
	КоличествоТестовыхСлучаев = 1;
	
	ТочкаДиаграммы = Диаграмма_Статус.УстановитьТочку(0);
	
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Т.Проверка,
	|	Т.ТестируемыйКлиент,
	|	Т.Тест,
	|	Т.РезультатВыполнения,
	|	Т.ОписаниеОшибки,
	|	Т.ДатаВыполенения,
	|	Т.НомерПоПорядку,
	|	Т.КоличествоТестовыхСлучаев,
	|	Т.КоличествоПровалов,
	|	Т.КоличествоОшибок,
	|	Т.КоличествоПропущенных,
	|	Т.ВремяВыполнения
	|ПОМЕСТИТЬ ВтПоследниеПроверки
	|ИЗ
	|	РегистрСведений.ПротоколыВыполненияТестов КАК Т
	|ГДЕ
	|	Т.ТестируемыйКлиент = &ТестируемыйКлиент
	|	И Т.Проверка = &Проверка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтПоследниеПроверки.ТестируемыйКлиент,
	|	ВтПоследниеПроверки.Проверка,
	|	СУММА(ВтПоследниеПроверки.КоличествоТестовыхСлучаев) КАК КоличествоТестовыхСлучаев,
	|	СУММА(ВтПоследниеПроверки.КоличествоПровалов) КАК КоличествоПровалов,
	|	СУММА(ВтПоследниеПроверки.КоличествоОшибок) КАК КоличествоОшибок,
	|	СУММА(ВтПоследниеПроверки.КоличествоПропущенных) КАК КоличествоПропущенных,
	|	СУММА(ВтПоследниеПроверки.КоличествоТестовыхСлучаев - ВтПоследниеПроверки.КоличествоПровалов - ВтПоследниеПроверки.КоличествоОшибок - ВтПоследниеПроверки.КоличествоПропущенных) КАК КоличествоУспешных
	|ИЗ
	|	ВтПоследниеПроверки КАК ВтПоследниеПроверки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтПоследниеПроверки.Проверка,
	|	ВтПоследниеПроверки.ТестируемыйКлиент";
	
	Запрос.УстановитьПараметр("ТестируемыйКлиент",Объект.ТестируемыйКлиент);
	Запрос.УстановитьПараметр("Проверка",Объект.Проверка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		КоличествоТестовыхСлучаев = Выборка.КоличествоТестовыхСлучаев;
		Если КоличествоТестовыхСлучаев<>0 Тогда
			КоличествоПровалов = Выборка.КоличествоПровалов/КоличествоТестовыхСлучаев*100;
			КоличествоОшибок = Выборка.КоличествоОшибок/КоличествоТестовыхСлучаев*100;
			КоличествоПропущенных = Выборка.КоличествоПропущенных/КоличествоТестовыхСлучаев*100;
			КоличествоУспешных = Выборка.КоличествоУспешных/КоличествоТестовыхСлучаев*100;
		КонецЕсли;
	КонецЕсли;
	
	Диаграмма_Статус.УстановитьЗначение(ТочкаДиаграммы,СерияПадения, КоличествоПровалов);
	Диаграмма_Статус.УстановитьЗначение(ТочкаДиаграммы,СерияОшибки, КоличествоОшибок);
	Диаграмма_Статус.УстановитьЗначение(ТочкаДиаграммы,СерияПропуски, КоличествоПропущенных);
	Диаграмма_Статус.УстановитьЗначение(ТочкаДиаграммы,СерияУспешно, КоличествоУспешных);
	
	СерияПадения.Цвет = новый Цвет(255,50,50);
	СерияОшибки.Цвет = новый Цвет(255,165,15);
	СерияУспешно.Цвет = новый Цвет(50,195,50);
	СерияПропуски.Цвет = новый Цвет(195,195,195);
	
	
	Диаграмма_Статус.ВидПодписей=ВидПодписейКДиаграмме.СерияПроцент;

КонецПроцедуры

&НаСервере
Процедура СформироватьДиаграммуПродолжительность()
	
	Перем Выборка, Запрос, КоличествоОшибок, КоличествоПровалов, КоличествоПропущенных, КоличествоТестовыхСлучаев, КоличествоУспешных, СерияОшибки, СерияПадения, СерияПропуски, СерияУспешно, ТочкаДиаграммы;
	
	Диаграмма_Продолжительность.Очистить();
	
	// настройки графика
	Если НЕ ЗначениеЗаполнено(ВидГрафика_Продолжительность) Тогда
		ВидГрафика_Продолжительность="Гистограмма";
	КонецЕсли;
	Элементы.ВидГрафика_Продолжительность.РежимВыбораИзСписка = Истина;
	Элементы.ВидГрафика_Продолжительность.РедактированиеТекста = Ложь;
	Элементы.ВидГрафика_Продолжительность.СписокВыбора.Очистить();
	Элементы.ВидГрафика_Продолжительность.СписокВыбора.Добавить("Гистограмма");
	Элементы.ВидГрафика_Продолжительность.СписокВыбора.Добавить("ГистограммаГоризонтальная");
	Элементы.ВидГрафика_Продолжительность.СписокВыбора.Добавить("Изометрическая");
	Элементы.ВидГрафика_Продолжительность.СписокВыбора.Добавить("ГистограммаОбъемная");
	Элементы.ВидГрафика_Продолжительность.СписокВыбора.Добавить("График");
	
	Диаграмма_Продолжительность.ТипДиаграммы=ТипДиаграммы[ВидГрафика_Продолжительность];
	СерияПродолжительность =  Диаграмма_Продолжительность.УстановитьСерию("Продолжительность");
	
	Продолжительность = 0;
	КоличествоТестовыхСлучаев = 1;
	

	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Т.Проверка,
	|	Т.ТестируемыйКлиент,
	|	Т.Тест,
	|	Т.РезультатВыполнения,
	|	Т.ОписаниеОшибки,
	|	Т.ДатаВыполенения,
	|	Т.НомерПоПорядку,
	|	Т.КоличествоТестовыхСлучаев,
	|	Т.КоличествоПровалов,
	|	Т.КоличествоОшибок,
	|	Т.КоличествоПропущенных,
	|	Т.ВремяВыполнения
	|ПОМЕСТИТЬ ВтПоследниеПроверки
	|ИЗ
	|	РегистрСведений.ПротоколыВыполненияТестов КАК Т
	|ГДЕ
	|	Т.ТестируемыйКлиент = &ТестируемыйКлиент
	|	И Т.Проверка = &Проверка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтПоследниеПроверки.Проверка,
	|	ВтПоследниеПроверки.ТестируемыйКлиент,
	|	СУММА(ВтПоследниеПроверки.КоличествоТестовыхСлучаев) КАК КоличествоТестовыхСлучаев,
	|	ВтПоследниеПроверки.ВремяВыполнения КАК Продолжительность
	|ИЗ
	|	ВтПоследниеПроверки КАК ВтПоследниеПроверки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтПоследниеПроверки.Проверка,
	|	ВтПоследниеПроверки.ТестируемыйКлиент,
	|	ВтПоследниеПроверки.ВремяВыполнения
	|
	|УПОРЯДОЧИТЬ ПО
	|	Продолжительность";
	
	Запрос.УстановитьПараметр("ТестируемыйКлиент",Объект.ТестируемыйКлиент);
	Запрос.УстановитьПараметр("Проверка",Объект.Проверка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		КоличествоТестовыхСлучаев = Выборка.КоличествоТестовыхСлучаев;
		Если Продолжительность>5 Тогда
			Продолжительность = Окр(Выборка.Продолжительность,0,РежимОкругления.Окр15как20);
		Иначе
			Продолжительность = Окр(Выборка.Продолжительность,1,РежимОкругления.Окр15как20);
		КонецЕсли;
		
		ТочкаДиаграммы = Диаграмма_Продолжительность.УстановитьТочку(Продолжительность);
		Диаграмма_Продолжительность.УстановитьЗначение(ТочкаДиаграммы,СерияПродолжительность, КоличествоТестовыхСлучаев);
		
	КонецЦикла;
	
	СерияПродолжительность.Цвет = новый Цвет(50,50,215);
	
	//Диаграмма_Продолжительность.ВидПодписей=ВидПодписейКДиаграмме.СерияПроцент;

КонецПроцедуры

&НаСервере
Процедура СформироватьДиаграммуСерьезностьДефектов()
	
	Перем Выборка, Запрос, КоличествоОшибок, КоличествоПровалов, КоличествоПропущенных, КоличествоТестовыхСлучаев, КоличествоУспешных, СерияОшибки, СерияПадения, СерияПропуски, СерияУспешно, ТочкаДиаграммы;
	
	Диаграмма_СерьезностьДефектов.Очистить();
	
	// настройки графика
	Если НЕ ЗначениеЗаполнено(ВидГрафика_СерьезностьДефектов) Тогда
		ВидГрафика_СерьезностьДефектов="ГистограммаГоризонтальная";
	КонецЕсли;
	Элементы.ВидГрафика_СерьезностьДефектов.РежимВыбораИзСписка = Истина;
	Элементы.ВидГрафика_СерьезностьДефектов.РедактированиеТекста = Ложь;
	Элементы.ВидГрафика_СерьезностьДефектов.СписокВыбора.Очистить();
	Элементы.ВидГрафика_СерьезностьДефектов.СписокВыбора.Добавить("Гистограмма");
	Элементы.ВидГрафика_СерьезностьДефектов.СписокВыбора.Добавить("ГистограммаГоризонтальная");
	Элементы.ВидГрафика_СерьезностьДефектов.СписокВыбора.Добавить("Изометрическая");
	Элементы.ВидГрафика_СерьезностьДефектов.СписокВыбора.Добавить("ГистограммаОбъемная");
	Элементы.ВидГрафика_СерьезностьДефектов.СписокВыбора.Добавить("График");
	
	Диаграмма_СерьезностьДефектов.ТипДиаграммы=ТипДиаграммы[ВидГрафика_СерьезностьДефектов];
	СерияСерьезностьДефетов =  Диаграмма_СерьезностьДефектов.УстановитьСерию("Серьезность");
	
	КоличествоТестовыхСлучаев = 1;
	

	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Т.Проверка,
	|	Т.ТестируемыйКлиент,
	|	Т.Тест,
	|	Т.РезультатВыполнения,
	|	Т.ОписаниеОшибки,
	|	Т.ДатаВыполенения,
	|	Т.НомерПоПорядку,
	|	Т.КоличествоТестовыхСлучаев,
	|	Т.КоличествоПровалов,
	|	Т.КоличествоОшибок,
	|	Т.КоличествоПропущенных,
	|	Т.ВремяВыполнения,
	|	ВЫБОР
	|		КОГДА Т.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.ПустаяСсылка)
	|			ТОГДА Т.Тест.СерьезностьДефекта
	|		КОГДА Т.Тест <> ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.ПустаяСсылка)
	|			ТОГДА Т.Тест.СерьезностьДефекта
	|		ИНАЧЕ Т.СерьезностьДефекта
	|	КОНЕЦ КАК СерьезностьДефекта
	|ПОМЕСТИТЬ ВтПоследниеПроверки
	|ИЗ
	|	РегистрСведений.ПротоколыВыполненияТестов КАК Т
	|ГДЕ
	|	Т.ТестируемыйКлиент = &ТестируемыйКлиент
	|	И Т.Проверка = &Проверка
	|	И Т.РезультатВыполнения В (ЗНАЧЕНИЕ(Перечисление.РезультатыВыполненияШагов.Провал), ЗНАЧЕНИЕ(Перечисление.РезультатыВыполненияШагов.Ошибка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВтПоследниеПроверки.КоличествоТестовыхСлучаев) КАК КоличествоТестовыхСлучаев,
	|	ВтПоследниеПроверки.СерьезностьДефекта,
	|	ВЫБОР
	|		КОГДА ВтПоследниеПроверки.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Блокирующая)
	|			ТОГДА 5
	|		КОГДА ВтПоследниеПроверки.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Критическая)
	|			ТОГДА 4
	|		КОГДА ВтПоследниеПроверки.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Значительная)
	|			ТОГДА 3
	|		КОГДА ВтПоследниеПроверки.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Незначительная)
	|			ТОГДА 2
	|		КОГДА ВтПоследниеПроверки.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Тривиальная)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК порядок
	|ПОМЕСТИТЬ ВтДефекты
	|ИЗ
	|	ВтПоследниеПроверки КАК ВтПоследниеПроверки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтПоследниеПроверки.СерьезностьДефекта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Блокирующая),
	|	5
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Критическая),
	|	4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Значительная),
	|	3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Незначительная),
	|	2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Тривиальная),
	|	1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВтДефекты.КоличествоТестовыхСлучаев) КАК КоличествоТестовыхСлучаев,
	|	ВтДефекты.СерьезностьДефекта,
	|	ВтДефекты.порядок КАК порядок
	|ИЗ
	|	ВтДефекты КАК ВтДефекты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтДефекты.СерьезностьДефекта,
	|	ВтДефекты.порядок
	|
	|УПОРЯДОЧИТЬ ПО
	|	порядок УБЫВ";
	
	Запрос.УстановитьПараметр("ТестируемыйКлиент",Объект.ТестируемыйКлиент);
	Запрос.УстановитьПараметр("Проверка",Объект.Проверка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		КоличествоТестовыхСлучаев = Выборка.КоличествоТестовыхСлучаев;
		Если НЕ ЗначениеЗаполнено(Выборка.СерьезностьДефекта) Тогда
			СерьезностьДефекта = "Неопределена";
		Иначе
			СерьезностьДефекта = Строка(Выборка.СерьезностьДефекта);
		КонецЕсли;
		
		
		ТочкаДиаграммы = Диаграмма_СерьезностьДефектов.УстановитьТочку(СерьезностьДефекта);
		Если Выборка.СерьезностьДефекта=Перечисления.ВариантыСерьезностиДефектов.Блокирующая тогда
			ТочкаДиаграммы.Цвет=новый Цвет(255,50,50);
		ИначеЕсли Выборка.СерьезностьДефекта=Перечисления.ВариантыСерьезностиДефектов.Критическая тогда
			ТочкаДиаграммы.Цвет=новый Цвет(255,165,15);
		ИначеЕсли Выборка.СерьезностьДефекта=Перечисления.ВариантыСерьезностиДефектов.Значительная тогда
			ТочкаДиаграммы.Цвет=новый Цвет(255,250,150);
		ИначеЕсли  НЕ ЗначениеЗаполнено(Выборка.СерьезностьДефекта) Тогда
			 ТочкаДиаграммы.Цвет=новый Цвет(195,195,195);
		КонецЕсли;
		
		ТочкаДиаграммы.ПриоритетЦвета=Истина;
		Диаграмма_СерьезностьДефектов.УстановитьЗначение(ТочкаДиаграммы,СерияСерьезностьДефетов, КоличествоТестовыхСлучаев);
		
	КонецЦикла;
	

КонецПроцедуры

&НаСервере
Процедура СформироватьДиаграммуСерьезностьДефектов_New()
	
	Перем Выборка, Запрос, КоличествоОшибок, КоличествоПровалов, КоличествоПропущенных, КоличествоТестовыхСлучаев, КоличествоУспешных, СерияОшибки, СерияПадения, СерияПропуски, СерияУспешно, ТочкаДиаграммы;
	
	Диаграмма_СерьезностьДефектов.Очистить();
	
	Диаграмма_СерьезностьДефектов.ТипДиаграммы=ТипДиаграммы.Гистограмма;
	
	СерияСерьезность_Блокирующая =  Диаграмма_СерьезностьДефектов.УстановитьСерию("Блокирующая");
	СерияСерьезность_Блокирующая.Цвет = новый Цвет(255,100,100);
	СерияСерьезность_Критическая =  Диаграмма_СерьезностьДефектов.УстановитьСерию("Критическая");
	СерияСерьезность_Критическая.Цвет = новый Цвет(255,100,255);
	СерияСерьезность_Значительная =  Диаграмма_СерьезностьДефектов.УстановитьСерию("Значительная");
	СерияСерьезность_Значительная.Цвет = новый Цвет(255,200,200);
	СерияСерьезность_Незначительная =  Диаграмма_СерьезностьДефектов.УстановитьСерию("Незначительная");
	СерияСерьезность_Незначительная.Цвет = новый Цвет(155,255,255);
	СерияСерьезность_Тривиальная =  Диаграмма_СерьезностьДефектов.УстановитьСерию("Тривиальная");
	СерияСерьезность_Тривиальная.Цвет = новый Цвет(155,255,155);
	СерияСерьезность_Неопределена =  Диаграмма_СерьезностьДефектов.УстановитьСерию("Неопределена");
	СерияСерьезность_Неопределена.Цвет = новый Цвет(205,205,205);

	
	КоличествоТестовыхСлучаев = 1;
	

	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Т.Проверка,
	|	Т.ТестируемыйКлиент,
	|	Т.Тест,
	|	Т.РезультатВыполнения,
	|	Т.ОписаниеОшибки,
	|	Т.ДатаВыполенения,
	|	Т.НомерПоПорядку,
	|	Т.КоличествоТестовыхСлучаев,
	|	Т.КоличествоПровалов,
	|	Т.КоличествоОшибок,
	|	Т.КоличествоПропущенных,
	|	Т.ВремяВыполнения,
	|	ВЫБОР
	|		КОГДА Т.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.ПустаяСсылка)
	|			ТОГДА Т.Тест.СерьезностьДефекта
	|		ИНАЧЕ Т.СерьезностьДефекта
	|	КОНЕЦ КАК СерьезностьДефекта
	|ПОМЕСТИТЬ ВтПоследниеПроверки
	|ИЗ
	|	РегистрСведений.ПротоколыВыполненияТестов КАК Т
	|ГДЕ
	|	Т.ТестируемыйКлиент = &ТестируемыйКлиент
	|	И Т.Проверка = &Проверка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВтПоследниеПроверки.КоличествоТестовыхСлучаев) КАК КоличествоТестовыхСлучаев,
	|	ВтПоследниеПроверки.СерьезностьДефекта,
	|	ВЫБОР
	|		КОГДА ВтПоследниеПроверки.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Блокирующая)
	|			ТОГДА 5
	|		КОГДА ВтПоследниеПроверки.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Критическая)
	|			ТОГДА 4
	|		КОГДА ВтПоследниеПроверки.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Значительная)
	|			ТОГДА 3
	|		КОГДА ВтПоследниеПроверки.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Незначительная)
	|			ТОГДА 2
	|		КОГДА ВтПоследниеПроверки.СерьезностьДефекта = ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Тривиальная)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК порядок
	|ПОМЕСТИТЬ ВтДефекты
	|ИЗ
	|	ВтПоследниеПроверки КАК ВтПоследниеПроверки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтПоследниеПроверки.СерьезностьДефекта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Блокирующая),
	|	5
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Критическая),
	|	4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Значительная),
	|	3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Незначительная),
	|	2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыСерьезностиДефектов.Тривиальная),
	|	1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВтДефекты.КоличествоТестовыхСлучаев) КАК КоличествоТестовыхСлучаев,
	|	ВтДефекты.СерьезностьДефекта,
	|	ВтДефекты.порядок КАК порядок
	|ИЗ
	|	ВтДефекты КАК ВтДефекты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтДефекты.СерьезностьДефекта,
	|	ВтДефекты.порядок
	|
	|УПОРЯДОЧИТЬ ПО
	|	порядок УБЫВ";
	
	Запрос.УстановитьПараметр("ТестируемыйКлиент",Объект.ТестируемыйКлиент);
	Запрос.УстановитьПараметр("Проверка",Объект.Проверка);
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		
		КоличествоТестовыхСлучаев = Выборка.КоличествоТестовыхСлучаев;
		ТекущаяСерия = Неопределено;
		ТочкаДиаграммы = Неопределено;
		
		Если Выборка.СерьезностьДефекта=Перечисления.ВариантыСерьезностиДефектов.Блокирующая тогда
			ТекущаяСерия = СерияСерьезность_Блокирующая;
		ИначеЕсли Выборка.СерьезностьДефекта=Перечисления.ВариантыСерьезностиДефектов.Критическая тогда
			ТекущаяСерия = СерияСерьезность_Критическая;
		ИначеЕсли Выборка.СерьезностьДефекта=Перечисления.ВариантыСерьезностиДефектов.Значительная тогда
			ТекущаяСерия = СерияСерьезность_Значительная;			
		ИначеЕсли Выборка.СерьезностьДефекта=Перечисления.ВариантыСерьезностиДефектов.Незначительная тогда
			ТекущаяСерия = СерияСерьезность_Незначительная;			
		ИначеЕсли Выборка.СерьезностьДефекта=Перечисления.ВариантыСерьезностиДефектов.Тривиальная тогда
			ТекущаяСерия = СерияСерьезность_Тривиальная;	
		Иначе
			ТекущаяСерия = СерияСерьезность_Неопределена;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Выборка.СерьезностьДефекта) Тогда
			СерьезностьДефекта = "Неопределена";
		Иначе
			СерьезностьДефекта = Строка(Выборка.СерьезностьДефекта);
		КонецЕсли;
		
		
		ТочкаДиаграммы = Диаграмма_СерьезностьДефектов.УстановитьТочку(СерьезностьДефекта);			
		Диаграмма_СерьезностьДефектов.УстановитьЗначение(ТочкаДиаграммы,ТекущаяСерия, КоличествоТестовыхСлучаев);
		
	КонецЦикла;
	

КонецПроцедуры

&НаСервере
Процедура СформироватьДиаграммуСоотношениеТестов()
	
	Перем Выборка, Запрос, КоличествоОшибок, КоличествоПровалов, КоличествоПропущенных, КоличествоТестовыхСлучаев, КоличествоУспешных, СерияОшибки, СерияПадения, СерияПропуски, СерияУспешно, ТочкаДиаграммы;
	
	Диаграмма_СоотношениеТестов.Очистить();

	
	// настройки графика
	Если НЕ ЗначениеЗаполнено(ВидГрафика_СоотношениеТестов) Тогда
		ВидГрафика_СоотношениеТестов="Гистограмма";
	КонецЕсли;
	Элементы.ВидГрафика_СоотношениеТестов.РежимВыбораИзСписка = Истина;
	Элементы.ВидГрафика_СоотношениеТестов.РедактированиеТекста = Ложь;
	Элементы.ВидГрафика_СоотношениеТестов.СписокВыбора.Очистить();
	Элементы.ВидГрафика_СоотношениеТестов.СписокВыбора.Добавить("Гистограмма");
	Элементы.ВидГрафика_СоотношениеТестов.СписокВыбора.Добавить("График");
	Элементы.ВидГрафика_СоотношениеТестов.СписокВыбора.Добавить("ГистограммаОбъемная");
	Элементы.ВидГрафика_СоотношениеТестов.СписокВыбора.Добавить("ГрафикСОбластями");
	

	Диаграмма_СоотношениеТестов.ТипДиаграммы=ТипДиаграммы[ВидГрафика_СоотношениеТестов];

	СерияБыло =  Диаграмма_СоотношениеТестов.УстановитьСерию("Было");
	СерияСтало =  Диаграмма_СоотношениеТестов.УстановитьСерию("Стало");
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
	|	ПротоколыВыполненияТестов.Проверка КАК Проверка
	|ПОМЕСТИТЬ ВтПоследниеДвеПроверки
	|ИЗ
	|	РегистрСведений.ПротоколыВыполненияТестов КАК ПротоколыВыполненияТестов
	|ГДЕ
	|	ПротоколыВыполненияТестов.ТестируемыйКлиент = &ТестируемыйКлиент
	|	И ПротоколыВыполненияТестов.Проверка <= &Проверка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПротоколыВыполненияТестов.Проверка.Код УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Проверка,
	|	Т.ТестируемыйКлиент,
	|	СУММА(Т.КоличествоТестовыхСлучаев) КАК КоличествоТестовыхСлучаев,
	|	СУММА(Т.КоличествоПровалов) КАК КоличествоПровалов,
	|	СУММА(Т.КоличествоОшибок) КАК КоличествоОшибок,
	|	СУММА(Т.КоличествоПропущенных) КАК КоличествоПропущенных,
	|	СУММА(Т.ВремяВыполнения) КАК ВремяВыполнения
	|ИЗ
	|	РегистрСведений.ПротоколыВыполненияТестов КАК Т
	|ГДЕ
	|	Т.ТестируемыйКлиент = &ТестируемыйКлиент
	|	И Т.Проверка В
	|			(ВЫБРАТЬ
	|				ВтПоследниеДвеПроверки.Проверка
	|			ИЗ
	|				ВтПоследниеДвеПроверки)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.ТестируемыйКлиент,
	|	Т.Проверка";
	
	Запрос.УстановитьПараметр("ТестируемыйКлиент",Объект.ТестируемыйКлиент);
	Запрос.УстановитьПараметр("Проверка",Объект.Проверка);
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		
		//ТочкаДиаграммы = Диаграмма_СоотношениеТестов.УстановитьТочку("Количество");
		//Если НЕ Выборка.Проверка=Объект.Проверка Тогда
		//	Диаграмма_СоотношениеТестов.УстановитьЗначение(ТочкаДиаграммы,СерияБыло, Выборка.КоличествоТестовыхСлучаев);
		//Иначе		
		//	Диаграмма_СоотношениеТестов.УстановитьЗначение(ТочкаДиаграммы,СерияСтало, Выборка.КоличествоТестовыхСлучаев);
		//КонецЕсли;
		
		ТочкаДиаграммы = Диаграмма_СоотношениеТестов.УстановитьТочку("Провалов");
		Если НЕ Выборка.Проверка=Объект.Проверка Тогда
			Диаграмма_СоотношениеТестов.УстановитьЗначение(ТочкаДиаграммы,СерияБыло, Выборка.КоличествоПровалов);
		Иначе		
			Диаграмма_СоотношениеТестов.УстановитьЗначение(ТочкаДиаграммы,СерияСтало, Выборка.КоличествоПровалов);
		КонецЕсли;
		
		ТочкаДиаграммы = Диаграмма_СоотношениеТестов.УстановитьТочку("Ошибок");
		Если НЕ Выборка.Проверка=Объект.Проверка Тогда
			Диаграмма_СоотношениеТестов.УстановитьЗначение(ТочкаДиаграммы,СерияБыло, Выборка.КоличествоОшибок);
		Иначе		
			Диаграмма_СоотношениеТестов.УстановитьЗначение(ТочкаДиаграммы,СерияСтало, Выборка.КоличествоОшибок);
		КонецЕсли;
		
	КонецЦикла;
	

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПоследнююПроверкуДляТестируемогоКлиента(Знач ТестируемыйКлиент)
	
	Проверка = Справочники.Проверки.ПустаяСсылка();
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	Т.Проверка КАК Проверка
	|ИЗ
	|	РегистрСведений.ПротоколыВыполненияТестов КАК Т
	|ГДЕ
	|	Т.ТестируемыйКлиент = &ТестируемыйКлиент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Т.Проверка.Код УБЫВ";
	Запрос.УстановитьПараметр("ТестируемыйКлиент",ТестируемыйКлиент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда
			Проверка = Выборка.Проверка;
		КонецЕсли;
		
	КонецЕсли;
	
	
	Возврат Проверка;
	
КонецФункции

&НаКлиенте
Процедура ТестируемыйКлиентПриИзменении(Элемент)
	СохранитьНастройкиПользователя();
	СформироватьДиаграммы();
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиПользователя(ИмяНастройки="",ЗначениеНастройки="")
	
	мОбъект = РеквизитФормыВЗначение("Объект");
	мОбъект.СохранитьНастройкиПользователя(Объект,ИмяНастройки,ЗначениеНастройки);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиПользователя()
	
	мОбъект = РеквизитФормыВЗначение("Объект");
	
	МассивНаименованийНастроек = новый Массив;
	МассивНаименованийНастроек.Добавить("ВидГрафика_Статус");
	МассивНаименованийНастроек.Добавить("ВидГрафика_СерьезностьДефектов");
	МассивНаименованийНастроек.Добавить("ВидГрафика_Продолжительность");
	МассивНаименованийНастроек.Добавить("ВидГрафика_СоотношениеТестов");
	
	Для каждого ИмяНастройки из МассивНаименованийНастроек Цикл
		
		ЗначениеНастройки = мОбъект.ЗагрузитьНастройкиПользователя(Объект,ИмяНастройки);		
		Если ЗначениеНастройки<>Неопределено Тогда
			ЭтаФорма[ИмяНастройки] = ЗначениеНастройки;
		КонецЕсли;
		
	КонецЦикла;

	
КонецПроцедуры


&НаКлиенте
Процедура ТипГрафика_СтатусПриИзменении(Элемент)
	
	Если Элемент=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяЭлемента = Элемент.Имя;
	
	Если ИмяЭлемента="ВидГрафика_Статус" Тогда
		СформироватьДиаграммуСтатусы();
	ИначеЕсли ИмяЭлемента="ВидГрафика_Продолжительность" Тогда
		СформироватьДиаграммуПродолжительность();;
	ИначеЕсли ИмяЭлемента="ВидГрафика_СерьезностьДефектов" Тогда
		СформироватьДиаграммуСерьезностьДефектов();
	ИначеЕсли ИмяЭлемента="ВидГрафика_СоотношениеТестов" Тогда
		СформироватьДиаграммуСоотношениеТестов();
	КонецЕсли;
	
	СохранитьНастройкиГрафика(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиГрафика(Элемент)
	
	Если Элемент=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяЭлемента = Элемент.Имя;
	СохранитьНастройкиПользователя(ИмяЭлемента,ЭтаФорма[ИмяЭлемента]);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВсе(Команда)
	СформироватьДиаграммы();
КонецПроцедуры
