&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мОбъект = РеквизитФормыВЗначение("Объект");
	мОбъект.ДобавитьМеню(ЭтаФорма,"Overview");
	
	ЭтаФорма.КоманднаяПанель.Видимость = Ложь;
	ЭтаФорма.АвтоЗаголовок = Ложь;
	ЭтаФорма.Заголовок = "Overview";
	
	ЗаполнитьЗначенияСвойств(Объект,Параметры);
	СписокЗаданий.Параметры.УстановитьЗначениеПараметра("ГруппаЗадания",Справочники.ГруппыЗаданий.ПустаяСсылка());

КонецПроцедуры

&НаКлиенте
Процедура КнопкаМеню(Команда)
	ИмяКоманды = Команда.Имя;
	мПараметры = новый Структура();
	ОткрытьФорму("ВнешняяОбработка.JenkinsSkin.Форма."+ИмяКоманды,мПараметры,ЭтаФорма,ЭтаФорма.УникальныйИдентификатор,ЭтаФорма.Окно);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗагрузитьНастройкиПользователя();
	СформироватьОписаниеПанелей();
	Если НЕ ЗначениеЗаполнено(ОтборПоПроверкам) Тогда
		ОтборПоПроверкам = "Все";
	КонецЕсли;	
	ОбработатьОтборФильтра(ОтборПоПроверкам);	
КонецПроцедуры

&НаСервере
Процедура СформироватьОписаниеПанелей()
	
	СформироватьОписаниеПанелиПоСборкам();
	
КонецПроцедуры


&НаСервере
Процедура СформироватьОписаниеПанелиПоСборкам()

	ОбщаяИнформацияПоСборкам = "<html><head></head><body>";
	
	//ОбщаяИнформацияПоСборкам = ОбщаяИнформацияПоСборкам+"<b>Проверка №"+Объект.Проверка+"</b>";
	//ОбщаяИнформацияПоСборкам = ОбщаяИнформацияПоСборкам+" запущена "+Объект.Проверка.ДатаНачала+" <br/>";
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 10
	|	ЛогВыполненныхЗаданий.Задание КАК Задание,
	|	ЛогВыполненныхЗаданий.Дата КАК Дата
	|ПОМЕСТИТЬ ВтПоследниеЗадания
	|ИЗ
	|	РегистрСведений.ЛогВыполненныхЗаданий КАК ЛогВыполненныхЗаданий
	|ГДЕ
	|	ЛогВыполненныхЗаданий.ЭтоЗапускЗадания = ИСТИНА 
	//|   И ЛогВыполненныхЗаданий.Задание.ЭтоПроверка = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Задание КАК Задание
	|ПОМЕСТИТЬ ВтЗадания
	|ИЗ
	|	ВтПоследниеЗадания КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Задание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(Т.Дата) КАК Дата
	|ИЗ
	|	ВтПоследниеЗадания КАК Т";
	Запрос.МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДатаОтбора = ТекущаяДата();
	
	Если Выборка.Следующий() Тогда
		ДатаОтбора = Выборка.Дата;
	КонецЕсли;
	
	
	Запрос2 = новый Запрос;
	Запрос2.Текст = "ВЫБРАТЬ
	|	ЛогВыполненныхЗаданий.Задание КАК Задание,
	|	ЛогВыполненныхЗаданий.Дата КАК ДатаНачала,
	|	ЛогВыполненныхЗаданий.ПорядокВыполнения КАК ПорядокВыполнения,
	|	ЛогВыполненныхЗаданий.Ключ КАК Ключ,
	|	ЛогВыполненныхЗаданий.ЭтоЗавершениеЗадания КАК ЭтоЗавершениеЗадания,
	|	ЛогВыполненныхЗаданий.ЭтоЗапускЗадания КАК ЭтоЗапускЗадания,
	|	ЛогВыполненныхЗаданий.Ошибка КАК Ошибка,
	|	ЛогВыполненныхЗаданий.Сообщение КАК Сообщение,
	|	ЛогВыполненныхЗаданий.Статус КАК Статус,
	|	ЛогВыполненныхЗаданий.Успешно КАК Успешно,
	|	ЛогВыполненныхЗаданий.Дата КАК ДатаЗавершения,
	|	ЛогВыполненныхЗаданий.Дата,
	|	ЛогВыполненныхЗаданий.Сборка КАК Сборка,
	|	ЛогВыполненныхЗаданий.Действие,
	|	ЛогВыполненныхЗаданий.ПодчиненноеЗадание
	|ИЗ
	|	РегистрСведений.ЛогВыполненныхЗаданий КАК ЛогВыполненныхЗаданий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтЗадания КАК ВтЗадания
	|		ПО ЛогВыполненныхЗаданий.Задание = ВтЗадания.Задание
	|ГДЕ
	|	ЛогВыполненныхЗаданий.Дата >= &Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаНачала УБЫВ
	|ИТОГИ
	|	МАКСИМУМ(ДатаНачала),
	|	МИНИМУМ(ДатаЗавершения)
	|ПО
	|	Сборка,
	|	Задание";
	
	Запрос2.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	Запрос2.УстановитьПараметр("Дата",ДатаОтбора);
	РезультатЗапроса = Запрос2.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаПоСборке = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		Пока ВыборкаПоСборке.Следующий() Цикл
			ВыборкаПоЗаданиям = ВыборкаПоСборке.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			
			
			Продолжительность = ВыборкаПоСборке.ДатаНачала-ВыборкаПоСборке.ДатаЗавершения;
			ОбщаяИнформацияПоСборкам = ОбщаяИнформацияПоСборкам+"<h4>"+" Сборка № "+ ВыборкаПоСборке.Сборка + ". Продолжительность: "+Продолжительность+" с "+"</h4>";
			
	
			
			Пока ВыборкаПоЗаданиям.Следующий() Цикл
				
				
				ОбщаяИнформацияПоСборкам = ОбщаяИнформацияПоСборкам+" "+Строка(ВыборкаПоЗаданиям.Задание)+"</br>";
								
				Выборка = ВыборкаПоСборке.Выбрать();
				
				htmlСостав = "";
				
				Пока Выборка.Следующий() Цикл
					
				htmlСостав = htmlСостав+Выборка.Дата+" № "+Выборка.ПорядокВыполнения+" "+Выборка.Действие+""+Выборка.ПодчиненноеЗадание+"</br>";	
					
				КонецЦикла;
				
				ОбщаяИнформацияПоСборкам = ОбщаяИнформацияПоСборкам+" <div style='overflow:hidden;border-style:dotted;border-color:gray;border-width:thin;padding:1px;'>"+htmlСостав+"</div>";

				
			КонецЦикла;
			
			
		КонецЦикла; 		
		
		ОбщаяИнформацияПоСборкам = ОбщаяИнформацияПоСборкам+"...";
	
	Иначе
	
		ОбщаяИнформацияПоСборкам = ОбщаяИнформацияПоСборкам+"История отсутствует...";
	
	КонецЕсли;
	
	ОбщаяИнформацияПоСборкам = ОбщаяИнформацияПоСборкам+"</body></html>";

КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиПользователя(ИмяНастройки="",ЗначениеНастройки="")
	
	мОбъект = РеквизитФормыВЗначение("Объект");
	мОбъект.СохранитьНастройкиПользователя(Объект,ИмяНастройки,ЗначениеНастройки);
	
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьНастройкиПользователя()
	
	мОбъект = РеквизитФормыВЗначение("Объект");
	мОбъект.ЗагрузитьНастройкиПользователя(Объект);
	
	ОтборПоПроверкам = мОбъект.ЗагрузитьНастройкиПользователя(Объект,"ОтборПоПроверкам");
	
КонецПроцедуры



&НаКлиенте
Процедура ОбработатьОтборФильтра(Знач ТипОтбора)
	
	ЭлементОтбора = Неопределено;  	
	
	Для каждого стр из СостоянияЗаданий.Отбор.Элементы Цикл
		Если стр.ИдентификаторПользовательскойНастройки="ОтборПоПроверкам" Тогда
			ЭлементОтбора = стр;
			прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЭлементОтбора=Неопределено Тогда 
		ЭлементОтбора = СостоянияЗаданий.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));  	
		ЭлементОтбора.ИдентификаторПользовательскойНастройки = "ОтборПоПроверкам";
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭтоПроверка");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
	Если ТипОтбора="Проверки" Тогда
		ЭлементОтбора.ПравоеЗначение = Истина;
		ЭлементОтбора.Использование = Истина;
	ИначеЕсли ТипОтбора="Задания" Тогда
		ЭлементОтбора.ПравоеЗначение = Ложь;
		ЭлементОтбора.Использование = Истина;
	Иначе
		ЭлементОтбора.Использование = Ложь;
	КонецЕсли;
	
	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОтборПоПроверкамПриИзменении(Элемент)
	ОбработатьОтборФильтра(ОтборПоПроверкам);
	СохранитьНастройкиПользователя("ОтборПоПроверкам",ОтборПоПроверкам);
КонецПроцедуры
